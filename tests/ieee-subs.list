ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 *
                                                                             2 * Tests five subtraction instructions:
                                                                             3 *   SUBTRACT (extended BFP, RRE)
                                                                             4 *   SUBTRACT (long BFP, RRE)
                                                                             5 *   SUBTRACT (long BFP, RXE)
                                                                             6 *   SUBTRACT (short BFP, RRE)
                                                                             7 *   SUBTRACT (short BFP, RXE)
                                                                             8 *
                                                                             9 * Also tests the following six conversion instructions
                                                                            10 *   CONVERT FROM FIXED (64 to short BFP, RRE)
                                                                            11 *   CONVERT FROM FIXED (64 to long BFP, RRE)
                                                                            12 *   CONVERT FROM FIXED (64 to extended BFP, RRE)
                                                                            13 *   CONVERT TO FIXED (64 to short BFP, RRE)
                                                                            14 *   CONVERT TO FIXED (64 to long BFP, RRE)
                                                                            15 *   CONVERT TO FIXED (64 to extended BFP, RRE)
                                                                            16 *
                                                                            17 * Also tests the following floating point support instructions
                                                                            18 *   LOAD  (Short)
                                                                            19 *   LOAD  (Long)
                                                                            20 *   LOAD ZERO (Long)
                                                                            21 *   STORE (Short)
                                                                            22 *   STORE (Long)
                                                                            23 *
                                                                            24 *  Convert integers 2, 1, 4, and -2 to each BFP floating point format
                                                                            25 *  Subtract the second from the first (2 - 1, 4 - -2) in each format
                                                                            26 *  Convert the results back to integers (none should round)
                                                                            27 *
                                      0000000000000000  00000000000008D3    28 BFPSUBS  START 0
                                      0000000000000000  0000000000000001    29 R0       EQU   0
                                      0000000000000001  0000000000000001    30 R1       EQU   1
                                      0000000000000002  0000000000000001    31 R2       EQU   2
                                      0000000000000003  0000000000000001    32 R3       EQU   3
                                      0000000000000004  0000000000000001    33 R4       EQU   4
                                      0000000000000005  0000000000000001    34 R5       EQU   5
                                      0000000000000006  0000000000000001    35 R6       EQU   6
                                      0000000000000007  0000000000000001    36 R7       EQU   7
                                      0000000000000008  0000000000000001    37 R8       EQU   8
                                      0000000000000009  0000000000000001    38 R9       EQU   9
                                      000000000000000A  0000000000000001    39 R10      EQU   10
                                      000000000000000B  0000000000000001    40 R11      EQU   11
                                      000000000000000C  0000000000000001    41 R12      EQU   12
                                      000000000000000D  0000000000000001    42 R13      EQU   13
                                      000000000000000E  0000000000000001    43 R14      EQU   14
                                      000000000000000F  0000000000000001    44 R15      EQU   15
0000000000000000                      0000000000000000                      45          USING *,0
0000000000000000                      0000000000000000  00000000000001A0    46          ORG   BFPSUBS+X'1A0'
00000000000001A0  00000001 80000000                                         47          DC    X'0000000180000000',AD(STARTSUB)       z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    48          ORG   BFPSUBS+X'1D0'
00000000000001D0  00020000 00000000                                         49          DC    X'0002000000000000000000000000DEAD' z/Arch pgm chk new PSW
00000000000001E0                      00000000000001E0  0000000000000200    50          ORG   BFPSUBS+X'200'
0000000000000200  B600 02C8                             00000000000002C8    51 STARTSUB STCTL R0,R0,CTLR0  Store CR0 to enable AFP
0000000000000204  9604 02C9                             00000000000002C9    52          OI    CTLR0+1,X'04'  Turn on AFP bit
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000208  B700 02C8                             00000000000002C8    53          LCTL  R0,R0,CTLR0  Reload updated CR0
000000000000020C  4DC0 0800                             0000000000000800    54          BAS   R12,CVTINPUT Convert inputs to binary formats
0000000000000210  4DC0 021C                             000000000000021C    55          BAS   R12,TESTSUB  Perform subtractions
0000000000000214  4DC0 084C                             000000000000084C    56          BAS   R12,CVTOUTS  Convert results to integers
0000000000000218  B2B2 02B8                             00000000000002B8    57          LPSWE WAITPSW      All done, load enabled wait PSW
                                                                            58 *
                                                                            59 *
                                                                            60 * Subtract pairs of values from each other
000000000000021C                                                            61 TESTSUB  DS    0H
000000000000021C  4120 0002                             0000000000000002    62          LA    R2,2          Set count of subtraction operations
0000000000000220  4130 0500                             0000000000000500    63          LA    R3,SHORTRES   Point to start of short BFP results
0000000000000224  4140 0510                             0000000000000510    64          LA    R4,LONGRES    Point to start of long BFP results
0000000000000228  4150 0530                             0000000000000530    65          LA    R5,EXTRES     Point to start of extended BFP results
000000000000022C  4170 0410                             0000000000000410    66          LA    R7,SHORTBFP   Point to start of short BFP input values
0000000000000230  4180 0420                             0000000000000420    67          LA    R8,LONGBFP    Point to start of long BFP input values
0000000000000234  4190 0440                             0000000000000440    68          LA    R9,EXTBFP     Point to start of extended BFP input values
                                                                            69 *     Top of loop; clear residuals from FPR0-1
0000000000000238  B375 0000                                                 70 SUBLOOP  LZDR  R0            Zero FPR0
000000000000023C  B375 0010                                                 71          LZDR  R1            Zero FPR1
                                                                            72 *     BFP Short subtraction RXE and RRE
0000000000000240  7800 7000                             0000000000000000    73          LE    R0,0(0,R7)    Get BFP short first of pair
0000000000000244  ED00 7004 000B                        0000000000000004    74          SEB   R0,4(0,R7)    Subtract BFP short second of pair
000000000000024A  7000 3000                             0000000000000000    75          STE   R0,0(0,R3)    Store short BFP result from RXE
000000000000024E  7800 7000                             0000000000000000    76          LE    R0,0(0,R7)    Get BFP short first of pair
0000000000000252  7810 7004                             0000000000000004    77          LE    R1,4(0,R7)    Get BFP short second of pair
0000000000000256  B30B 0001                                                 78          SEBR  R0,R1         Subtract BFP values, result in FPR0
000000000000025A  7000 3004                             0000000000000004    79          STE   R0,4(0,R3)    Store short BFP from RRE
000000000000025E  4170 7008                             0000000000000008    80          LA    R7,8(0,R7)    Point to next short BFP input pair
0000000000000262  4130 3008                             0000000000000008    81          LA    R3,8(0,R3)    Point to next short BFP result pair
                                                                            82 *     BFP Long subtraction RXE and RRE
0000000000000266  6800 8000                             0000000000000000    83          LD    R0,0(0,R8)    Get BFP long first of pair
000000000000026A  ED00 8008 001B                        0000000000000008    84          SDB   R0,8(0,R8)    Subtract BFP long second of pair
0000000000000270  6000 4000                             0000000000000000    85          STD   R0,0(0,R4)    Store long BFP result from RXE
0000000000000274  6800 8000                             0000000000000000    86          LD    R0,0(0,R8)    Get BFP long first of pair
0000000000000278  6810 8008                             0000000000000008    87          LD    R1,8(0,R8)    Get BFP long second of pair
000000000000027C  B31B 0001                                                 88          SDBR  R0,R1         Subtract BFP values, result in FPR0
0000000000000280  6000 4008                             0000000000000008    89          STD   R0,8(0,R4)    Store long BFP from RRE
0000000000000284  4180 8010                             0000000000000010    90          LA    R8,16(0,R8)   Point to next long BFP input pair
0000000000000288  4140 4010                             0000000000000010    91          LA    R4,16(0,R4)   Point to next long BFP result pair
                                                                            92 *     BFP Extended subtraction RRE
000000000000028C  6800 9000                             0000000000000000    93          LD    R0,0(0,R9)    Get BFP ext. 1st half of first of pair
0000000000000290  6820 9008                             0000000000000008    94          LD    R2,8(0,R9)    Get BFP ext. 2nd half of first of pair
0000000000000294  6810 9010                             0000000000000010    95          LD    R1,16(0,R9)   Get BFP ext. 1st half of second of pair
0000000000000298  6830 9018                             0000000000000018    96          LD    R3,24(0,R9)   Get BFP ext. 2nd half of second of pair
000000000000029C  B34B 0001                                                 97          SXBR  R0,R1         Subtract BFP values, result in FPR0-FPR2
00000000000002A0  6000 5000                             0000000000000000    98          STD   R0,0(0,R5)    Store ext. BFP from RRE
00000000000002A4  6020 5008                             0000000000000008    99          STD   R2,8(0,R5)    Store ext. BFP from RRE
00000000000002A8  4190 9020                             0000000000000020   100          LA    R9,32(0,R9)   Point to next ext. BFP input pair
00000000000002AC  4150 5010                             0000000000000010   101          LA    R5,16(0,R5)   Point to next ext. BFP result
                                                                           102 *
00000000000002B0  4620 0238                             0000000000000238   103          BCT   R2,SUBLOOP    Subtract next input pair
00000000000002B4  07FC                                                     104          BR    R12           Tests done, return to mainline
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           105 *
                                                                           106 *
                                                                           107 *
00000000000002B8                                                           108          DS    0D            Ensure correct alignment for PSW
00000000000002B8  00020000 00000000                                        109 WAITPSW  DC    X'00020000000000000000000000000000'   Disabled wait state PSW - normal completion
00000000000002C8  00000000                                                 110 CTLR0    DS    F             Control register 0 (bit45 AFP control)
                                                                           111 *
00000000000002CC                      00000000000002CC  0000000000000480   112          ORG   BFPSUBS+X'480'
0000000000000480                                                           113 INTVALS  DS    0D            Ensure alignment for 64-bit ints
0000000000000480  00000000 00000002                                        114          DC    F'0',F'2'         2 first test integer
0000000000000488  00000000 00000001                                        115          DC    F'0',F'1'         1 second test integer
0000000000000490  00000000 00000004                                        116          DC    F'0',F'4'         4 third test integer
0000000000000498  FFFFFFFF FFFFFFFE                                        117          DC    F'-1',F'-2'      -2 fourth test integer
                                                                           118 *
                                      0000000000000410  0000000000000000   119 SHORTBFP EQU   BFPSUBS+X'410'  410.10   test inputs in short bfp
                                                                           120
                                      0000000000000420  0000000000000000   121 LONGBFP  EQU   BFPSUBS+X'420'  420.20   test inputs in long bfp
                                                                           122
                                      0000000000000440  0000000000000000   123 EXTBFP   EQU   BFPSUBS+X'440'  440.40   test inputs in extended bfp
                                                                           124
                                      0000000000000500  0000000000000000   125 SHORTRES EQU   BFPSUBS+X'500'  500.10   Short subtraction results (2 pairs, RXE & RRE)
                                      0000000000000510  0000000000000000   126 LONGRES  EQU   BFPSUBS+X'510'  510.20   Long subtraction results (2 pairs, RXE & RRE)
                                      0000000000000530  0000000000000000   127 EXTRES   EQU   BFPSUBS+X'530'  530.20   Extended subtraction results (1 pair, RRE only)
                                                                           128
                                      0000000000000550  0000000000000000   129 ISHBFP   EQU   BFPSUBS+X'550'  550.20   Convert short BFP to 64-bit Integer results
                                      0000000000000570  0000000000000000   130 ILNBFP   EQU   BFPSUBS+X'570'  570.20   Convert long BFP to 64-bit Integer results
                                      0000000000000590  0000000000000000   131 IXTBFP   EQU   BFPSUBS+X'590'  590.10   Convert extended BFP to 64-bit Integer results
                                                                           132 *
                                                                           133 *
                                                                           134 * Subroutine: convert 64-bit integers into BFP in all precisions
                                                                           135 *
00000000000004A0                      00000000000004A0  0000000000000800   136          ORG   BFPSUBS+X'800'
0000000000000800                                                           137 CVTINPUT DS    0H            Input conversion routine
0000000000000800  4120 0004                             0000000000000004   138          LA    R2,4          Set count of 64-bit test input values
0000000000000804  4130 0480                             0000000000000480   139          LA    R3,INTVALS    point to start of input values
0000000000000808  4170 0410                             0000000000000410   140          LA    R7,SHORTBFP   Point to start of short BFP input values
000000000000080C  4180 0420                             0000000000000420   141          LA    R8,LONGBFP    Point to start of long BFP input values
0000000000000810  4190 0440                             0000000000000440   142          LA    R9,EXTBFP     Point to start of extended BFP input values
0000000000000814  0DD0                                                     143          BASR  R13,0         Set top of loop
                                                                           144 * convert integers to three BFP formats
0000000000000816  E310 3000 0004                        0000000000000000   145 CVTLOOP  LG    R1,0(0,R3)    Get integer test value
000000000000081C  B3A4 0001                                                146          CEGBR R0,R1         Cvt Int in GPR1 to short float in FPR0
0000000000000820  7000 7000                             0000000000000000   147          STE   R0,0(0,R7)    Store short BFP
0000000000000824  B3A5 0001                                                148          CDGBR R0,R1         Cvt Int in GPR1 to long float in FPR0
0000000000000828  6000 8000                             0000000000000000   149          STD   R0,0(0,R8)    Store long BFP
000000000000082C  B3A6 0001                                                150          CXGBR R0,R1         Cvt Int in GPR1 to ext float in FPR0-FPR2
0000000000000830  6000 9000                             0000000000000000   151          STD   R0,0(0,R9)    Store extended BFP part 1
0000000000000834  6020 9008                             0000000000000008   152          STD   R2,8(0,R9)    Store extended BFP part 2
0000000000000838  4130 3008                             0000000000000008   153          LA    R3,8(0,R3)    point to next input values
000000000000083C  4170 7004                             0000000000000004   154          LA    R7,4(0,R7)    Point to next short BFP converted values
0000000000000840  4180 8008                             0000000000000008   155          LA    R8,8(0,R8)    Point to next long BFP converted values
0000000000000844  4190 9010                             0000000000000010   156          LA    R9,16(0,R9)   Point to next extended BFP converted values
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000848  062D                                                     157          BCTR  R2,R13        Convert next input value.
000000000000084A  07FC                                                     158          BR    R12           Conversion done, return to mainline
                                                                           159 *
                                                                           160 *
                                                                           161 * Convert back to integers
                                                                           162 *
000000000000084C                                                           163 CVTOUTS  DS    0H
000000000000084C  4120 0002                             0000000000000002   164          LA    R2,2          Set count of subtraction operations
0000000000000850  4170 0500                             0000000000000500   165          LA    R7,SHORTRES   Point to start of short BFP results
0000000000000854  4180 0510                             0000000000000510   166          LA    R8,LONGRES    Point to start of long BFP results
0000000000000858  4190 0530                             0000000000000530   167          LA    R9,EXTRES     Point to start of extended BFP results
000000000000085C  4130 0550                             0000000000000550   168          LA    R3,ISHBFP     Point to start of short BFP Integer results
0000000000000860  4140 0570                             0000000000000570   169          LA    R4,ILNBFP     Point to start of long BFP integer results
0000000000000864  4150 0590                             0000000000000590   170          LA    R5,IXTBFP     Point to start of extended BFP integer results
0000000000000868  0DD0                                                     171          BASR  R13,0         Set top of loop
                                                                           172 *
000000000000086A  B375 0000                                                173 INTLOOP  LZDR  R0            Zero FPR0
                                                                           174 *     Convert shorts back to integer
000000000000086E  7800 7000                             0000000000000000   175          LE    R0,0(0,R7)    Get BFP short result first of pair
0000000000000872  B3A8 0000                                                176          CGEBR R0,R0         Convert to integer in r0
0000000000000876  E300 3000 0024                        0000000000000000   177          STG   R0,0(0,R3)    Store integer result
000000000000087C  7800 7004                             0000000000000004   178          LE    R0,4(0,R7)    Get BFP short result second of pair
                                                                           179 *
0000000000000880  B3A8 0000                                                180          CGEBR R0,R0         Convert to integer in r0
0000000000000884  E300 3008 0024                        0000000000000008   181          STG   R0,8(0,R3)    Store integer result
                                                                           182 *
000000000000088A  6800 8000                             0000000000000000   183          LD    R0,0(0,R8)    Get BFP long result first of pair
000000000000088E  B3A9 0000                                                184          CGDBR R0,R0         Convert to integer in r0
0000000000000892  E300 4000 0024                        0000000000000000   185          STG   R0,0(0,R4)    Store integer result
0000000000000898  6800 8008                             0000000000000008   186          LD    R0,8(0,R8)    Get BFP long result second of pair
000000000000089C  B3A9 0000                                                187          CGDBR R0,R0         Convert to integer in r0
00000000000008A0  E300 4008 0024                        0000000000000008   188          STG   R0,8(0,R4)    Store integer result
                                                                           189 *
00000000000008A6  6800 9000                             0000000000000000   190          LD    R0,0(0,R9)    Get BFP ext. 1st half of first of pair
00000000000008AA  6820 9008                             0000000000000008   191          LD    R2,8(0,R9)    Get BFP ext. 2nd half of first of pair
00000000000008AE  B3AA 0000                                                192          CGXBR R0,R0         Convert BFP Ext. to Integer-64
00000000000008B2  E300 5000 0024                        0000000000000000   193          STG   R0,0(0,R5)    Store integer result lower word
                                                                           194 *
00000000000008B8  4170 7008                             0000000000000008   195          LA    R7,8(0,R7)    Point to next short BFP input pair
00000000000008BC  4130 3010                             0000000000000010   196          LA    R3,16(0,R3)   Point to next short BFP integer pair
00000000000008C0  4180 8010                             0000000000000010   197          LA    R8,16(0,R8)   Point to next long BFP input pair
00000000000008C4  4140 4010                             0000000000000010   198          LA    R4,16(0,R4)   Point to next long BFP integer pair
00000000000008C8  4190 9010                             0000000000000010   199          LA    R9,16(0,R9)   Point to next ext. BFP input
00000000000008CC  4150 5008                             0000000000000008   200          LA    R5,8(0,R5)    Point to next ext. BFP integer
00000000000008D0  062D                                                     201          BCTR  R2,R13        Subtract next input pair
00000000000008D2  07FC                                                     202          BR    R12           Conversion done, return to mainline
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     5

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPSUBS             J    000000    2260    28   46   48   50  112  119  121  123  125  126  127  129  130  131  136
CTLR0               F    0002C8       4   110   51   52   53
CVTINPUT            H    000800       2   137   54
CVTLOOP             I    000816       6   145
CVTOUTS             H    00084C       2   163   56
EXTBFP              U    000440       0   123   68  142
EXTRES              U    000530       0   127   65  167
ILNBFP              U    000570       0   130  169
IMAGE               1    000000    2260     0
INTLOOP             I    00086A       4   173
INTVALS             D    000480       8   113  139
ISHBFP              U    000550       0   129  168
IXTBFP              U    000590       0   131  170
LONGBFP             U    000420       0   121   67  141
LONGRES             U    000510       0   126   64  166
R0                  U    000000       1    29   51   53   70   73   74   75   76   78   79   83   84   85   86   88   89   93   97
                                                98  146  147  148  149  150  151  173  175  176  177  178  180  181  183  184  185
                                               186  187  188  190  192  193
R1                  U    000001       1    30   71   77   78   87   88   95   97  145  146  148  150
R10                 U    00000A       1    39
R11                 U    00000B       1    40
R12                 U    00000C       1    41   54   55   56  104  158  202
R13                 U    00000D       1    42  143  157  171  201
R14                 U    00000E       1    43
R15                 U    00000F       1    44
R2                  U    000002       1    31   62   94   99  103  138  152  157  164  191  201
R3                  U    000003       1    32   63   75   79   81   96  139  145  153  168  177  181  196
R4                  U    000004       1    33   64   85   89   91  169  185  188  198
R5                  U    000005       1    34   65   98   99  101  170  193  200
R6                  U    000006       1    35
R7                  U    000007       1    36   66   73   74   76   77   80  140  147  154  165  175  178  195
R8                  U    000008       1    37   67   83   84   86   87   90  141  149  155  166  183  186  197
R9                  U    000009       1    38   68   93   94   95   96  100  142  151  152  156  167  190  191  199
SHORTBFP            U    000410       0   119   66  140
SHORTRES            U    000500       0   125   63  165
STARTSUB            I    000200       4    51   47
SUBLOOP             I    000238       4    70  103
TESTSUB             H    00021C       2    61   55
WAITPSW             X    0002B8      16   109   57
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     6

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     7

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2260  000-8D3  000-8D3
  Region            2260  000-8D3  000-8D3
    CSECT  BFPSUBS  2260  000-8D3  000-8D3
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:51  Page     8

   STMT                            FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-subs.asm


** NO ERRORS FOUND **

