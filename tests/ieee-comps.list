ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 *
                                                                             2 *  For the following tests, the IEEE exception masks in the FPC register are set
                                                                             3 *  to zero, so no program interruptions.  The IEEE status flags are saved and set
                                                                             4 *  to zero after each test.
                                                                             5 *
                                                                             6 *  1. COMPARE adjacent pairs of values in the input set (nine values means eight
                                                                             7 *     comparisons).  Save condition code and FPC register IEEE flags byte (byte 1).
                                                                             8 *
                                                                             9 *  2. COMPARE AND SIGNAL adjacent pairs of values in the input set (nine values
                                                                            10 *     means eight comparisons).  Save condition code and FPC register IEEE flags
                                                                            11 *     byte (byte 1).
                                                                            12 *
                                                                            13 *  3. LOAD AND TEST the first eight values in the input set (the nineth value is
                                                                            14 *     not tested).  Save condition code and FPC register IEEE flags byte (byte 1).
                                                                            15 *     The result from the last LOAD AND TEST is saved to verify conversion of the
                                                                            16 *     SNaN into a QNaN.
                                                                            17 *
                                                                            18 *  4. TEST DATA CLASS the first eight values in the input set (the nineth value is
                                                                            19 *     not tested) using each of two masks specific to the input value.  The first
                                                                            20 *     mask will test true (cc=1)  and the second will test false (cc=0).  Save the
                                                                            21 *     condition code; the IEEE flags are not changed by this instruction.
                                                                            22 *
                                                                            23 *     Test data:             QNaN,    1,    1,    2,  -inf, -SubN,  +inf, SNaN,    0.
                                                                            24 *     Test data class masks:  080,  200,  200,  200,   010,  100,    020,  002.
                                                                            25 *
                                                                            26 *     Expected results in cc/flags format for COMPARE, COMPARE AND SIGNAL, and LOAD AND TEST
                                                                            27 *     - COMPARE:            3/00  0/00  1/00  2/00  1/00  1/00  3/80  3/80
                                                                            28 *     - COMPARE AND SIGNAL: 3/80  0/00  1/00  2/00  1/00  1/00  3/80  3/80
                                                                            29 *     - LOAD AND TEST:      3/00  2/00  2/00  2/00  1/00  1/00  2/00  3/80
                                                                            30 *
                                                                            31 *     Expected results in cc1/cc2 format for TEST DATA CLASS
                                                                            32 *     - TEST DATA CLASS:    1/0   1/0   1/0   1/0   1/0   1/0   1/0   1/0
                                                                            33 *
                                                                            34 *
                                                                            35 * Tests 5 COMPARE, 5 COMPARE AND SIGNAL, 3 LOAD AND TEST, and 3 TEST DATA CLASS instructions
                                                                            36 *   COMPARE (BFP short, RRE) CEBR
                                                                            37 *   COMPARE (BFP short, RXE) CEB
                                                                            38 *   COMPARE (BFP long, RRE) CDBR
                                                                            39 *   COMPARE (BFP long, RXE) CDB
                                                                            40 *   COMPARE (BFP extended, RRE) CXBR
                                                                            41 *   COMPARE AND SIGNAL (BFP short, RRE) KEBR
                                                                            42 *   COMPARE AND SIGNAL (BFP short, RXE) KEB
                                                                            43 *   COMPARE AND SIGNAL (BFP long, RRE) KDBR
                                                                            44 *   COMPARE AND SIGNAL (BFP long, RXE) KDB
                                                                            45 *   COMPARE AND SIGNAL (BFP extended, RRE) KXBR
                                                                            46 *   LOAD AND TEST (BFP short, RRE) LTEBR
                                                                            47 *   LOAD AND TEST (BFP long, RRE) LTDBR
                                                                            48 *   LOAD AND TEST (BFP extended, RRE) LTXBR
                                                                            49 *   TEST DATA CLASS (BFP short, RRE) LTEBR
                                                                            50 *   TEST DATA CLASS (BFP long, RRE) LTDBR
                                                                            51 *   TEST DATA CLASS (BFP extended, RRE) LTXBR
                                                                            52 *
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            53 *
                                                                            54 * Also tests the following floating point support instructions
                                                                            55 *   EXTRACT FPC
                                                                            56 *   LOAD  (Short)
                                                                            57 *   LOAD  (Long)
                                                                            58 *   LOAD ZERO (Long)
                                                                            59 *   STORE (Short)
                                                                            60 *   STORE (Long)
                                                                            61 *   SET FPC
                                                                            62 *
                                      0000000000000000  000000000000091B    63 BFPCOMPS START 0
                                      0000000000000000  0000000000000001    64 R0       EQU   0
                                      0000000000000001  0000000000000001    65 R1       EQU   1
                                      0000000000000002  0000000000000001    66 R2       EQU   2
                                      0000000000000003  0000000000000001    67 R3       EQU   3
                                      0000000000000004  0000000000000001    68 R4       EQU   4
                                      0000000000000005  0000000000000001    69 R5       EQU   5
                                      0000000000000006  0000000000000001    70 R6       EQU   6
                                      0000000000000007  0000000000000001    71 R7       EQU   7
                                      0000000000000008  0000000000000001    72 R8       EQU   8
                                      0000000000000009  0000000000000001    73 R9       EQU   9
                                      000000000000000A  0000000000000001    74 R10      EQU   10
                                      000000000000000B  0000000000000001    75 R11      EQU   11
                                      000000000000000C  0000000000000001    76 R12      EQU   12
                                      000000000000000D  0000000000000001    77 R13      EQU   13
                                      000000000000000E  0000000000000001    78 R14      EQU   14
                                      000000000000000F  0000000000000001    79 R15      EQU   15
0000000000000000                      0000000000000000                      80          USING *,0
0000000000000000                      0000000000000000  00000000000001A0    81          ORG   BFPCOMPS+X'1A0'
00000000000001A0  00000001 80000000                                         82          DC    X'0000000180000000',AD(STARTTST)    z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    83          ORG   BFPCOMPS+X'1D0'
00000000000001D0  00020000 00000000                                         84          DC    X'0002000000000000000000000000DEAD' z/Arch pgm chk new PSW
00000000000001E0                      00000000000001E0  0000000000000200    85          ORG   BFPCOMPS+X'200'
                                                                            86 *
0000000000000200  B600 0228                             0000000000000228    87 STARTTST STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000204  9604 0229                             0000000000000229    88          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000208  B700 0228                             0000000000000228    89          LCTL  R0,R0,CTLR0    Reload updated CR0
000000000000020C  B38C 0000                                                 90          EFPC  R0             Save reference copy of FPC
0000000000000210  E3B0 0230 0024                        0000000000000230    91          STG   R11,SAVER11    Save R11 in case we're on z/CMS
0000000000000216  4DC0 0248                             0000000000000248    92          BAS   R12,TESTCOMP   Perform compares and tests
000000000000021A  E3B0 0230 0004                        0000000000000230    93          LG    R11,SAVER11    Restore R11 in case we're on z/CMS
0000000000000220  12EE                                                      94          LTR   R14,R14        Any value in R14?
0000000000000222  077E                                                      95          BNZR  R14            ..yes, running on z/CMS, take graceful exit
0000000000000224  B2B2 0238                             0000000000000238    96          LPSWE WAITPSW        ..no, on bare iron, load disabled wait PSW
                                                                            97 *
0000000000000228  00000000                                                  98 CTLR0    DS    F              Control register 0 (bit45 AFP control)
0000000000000230  00000000 00000000                                         99 SAVER11  DS    D              Savearea for R11, needed when on z/CMS
0000000000000238  00020000 00000000                                        100 WAITPSW  DC    X'00020000000000000000000000000000' Disabled PSW - normal completion
                                                                           101 *
                                                                           102 * BFP Compares, Load and Test, and Test Data Class main processing loop.
                                                                           103 * All tests are performed in each iteration of the loop.
                                                                           104 *
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000248                                                           105 TESTCOMP DS    0H             Process one test case
0000000000000248  4120 0008                             0000000000000008   106          LA    R2,8           Set count of multiplication operations
000000000000024C  4130 0700                             0000000000000700   107          LA    R3,RESULTCC    Point cc table, 8 per precision per instruction
0000000000000250  4140 0800                             0000000000000800   108          LA    R4,RESULTFL    Point IEEE flags table, 8 per precision per instruction
0000000000000254  4170 04D8                             00000000000004D8   109          LA    R7,SHORTBFP    Point to start of short BFP input values
0000000000000258  4180 05D8                             00000000000005D8   110          LA    R8,TDCMASKS    Point to start of masks for TDC instruction
000000000000025C  4190 0500                             0000000000000500   111          LA    R9,LONGBFP     Point to start of long BFP input values
0000000000000260  41A0 0548                             0000000000000548   112          LA    R10,EXTDBFP    Point to start of extended BFP input values
0000000000000264  0DD0                                                     113          BASR  R13,0          Set top of loop
                                                                           114 *
0000000000000266  4DB0 028E                             000000000000028E   115          BAS   R11,SHORTS     Test shorts: CEB/CEBR, KEB/KEBR, LTEBR, and TCEB
000000000000026A  4DB0 036A                             000000000000036A   116          BAS   R11,LONGS      Test longs: CDB/CDBR, KDB/KDBR, LTDBR, and TCDB
000000000000026E  4DB0 043A                             000000000000043A   117          BAS   R11,EXTDS      Test extendeds: CXBR, KXBR, LTXBR, and TCXB
0000000000000272  4130 3001                             0000000000000001   118          LA    R3,1(0,R3)     point to next cc table entry
0000000000000276  4140 4001                             0000000000000001   119          LA    R4,1(0,R4)     Point to next mask table entry
000000000000027A  4170 7004                             0000000000000004   120          LA    R7,4(0,R7)     Point to next short BFP input value
000000000000027E  4180 8004                             0000000000000004   121          LA    R8,4(0,R8)     Point to next TDCxx mask pair
0000000000000282  4190 9008                             0000000000000008   122          LA    R9,8(0,R9)     Point to next long BFP input value
0000000000000286  41A0 A010                             0000000000000010   123          LA    R10,16(0,R10)  Point to extended long BFP input value
000000000000028A  062D                                                     124          BCTR  R2,R13         Loop through all test cases
                                                                           125 *
000000000000028C  07FC                                                     126          BR    R12            Tests done, return to mainline
                                                                           127 *
                                                                           128 *     Next iteration of short BFP instruction testing; clear residuals from FP registers
                                                                           129 *
000000000000028E  B375 0000                                                130 SHORTS   LZDR  R0            Zero FPR0
0000000000000292  B375 0010                                                131          LZDR  R1            Zero FPR1
0000000000000296  B375 00D0                                                132          LZDR  R13           Zero FPR13
000000000000029A  7800 7000                             0000000000000000   133          LE    R0,0(0,R7)    Get BFP short first value
000000000000029E  78D0 7004                             0000000000000004   134          LE    R13,4(0,R7)   Get BFP short second value
00000000000002A2  3810                                                     135          LER   R1,R0         Copy second value for CEBR RRE
                                                                           136 *     Compare value pair using short RXE
00000000000002A4  B384 0000                                                137          SFPC  R0            Load reference copy of FPC
00000000000002A8  ED00 7004 0009                        0000000000000004   138          CEB   R0,4(0,R7)    Compare first and second values
00000000000002AE  B222 0010                                                139          IPM   R1            Get condition code and program mask
00000000000002B2  8810 001C                             000000000000001C   140          SRL   R1,28         Isolate CC in low order byte
00000000000002B6  4210 3000                             0000000000000000   141          STC   R1,0(0,R3)    Save condition code in results table
00000000000002BA  B38C 0010                                                142          EFPC  R1            Get result FPC
00000000000002BE  BE14 4000                             0000000000000000   143          STCM  R1,B'0100',0(R4)  Store IEEE Flags in results table
                                                                           144 *     Compare value pair using short RRE
00000000000002C2  B29D 0000                             0000000000000000   145          LFPC  R0            Load reference copy of FPC
00000000000002C6  B309 001D                                                146          CEBR  R1,R13        Compare first and second values
00000000000002CA  B222 0010                                                147          IPM   R1            Get condition code and program mask
00000000000002CE  8810 001C                             000000000000001C   148          SRL   R1,28         Isolate CC in low order byte
00000000000002D2  4210 3008                             0000000000000008   149          STC   R1,8(0,R3)    Save condition code in results table
00000000000002D6  B38C 0010                                                150          EFPC  R1            Get result FPC
00000000000002DA  BE14 4008                             0000000000000008   151          STCM  R1,B'0100',8(R4)  Store IEEE Flags in results table
                                                                           152 *     Compare and Signal value pair using short RXE
00000000000002DE  B384 0000                                                153          SFPC  R0            Load reference copy of FPC
00000000000002E2  ED00 7004 0008                        0000000000000004   154          KEB   R0,4(0,R7)    Compare first and second values, signal if NaN
00000000000002E8  B222 0010                                                155          IPM   R1            Get condition code and program mask
00000000000002EC  8810 001C                             000000000000001C   156          SRL   R1,28         Isolate CC in low order byte
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000002F0  4210 3028                             0000000000000028   157          STC   R1,40(0,R3)   Save condition code in results table
00000000000002F4  B38C 0010                                                158          EFPC  R1            Get result FPC
00000000000002F8  BE14 4028                             0000000000000028   159          STCM  R1,B'0100',40(R4)  Store IEEE Flags in results table
                                                                           160 *     Compare and Signal value pair using short RRE
00000000000002FC  B29D 0000                             0000000000000000   161          LFPC  R0            Load reference copy of FPC
0000000000000300  B308 001D                                                162          KEBR  R1,R13        Compare first and second values, signal if NaN
0000000000000304  B222 0010                                                163          IPM   R1            Get condition code and program mask
0000000000000308  8810 001C                             000000000000001C   164          SRL   R1,28         Isolate CC in low order byte
000000000000030C  4210 3030                             0000000000000030   165          STC   R1,48(0,R3)   Save condition code in results table
0000000000000310  B38C 0010                                                166          EFPC  R1            Get result FPC
0000000000000314  BE14 4030                             0000000000000030   167          STCM  R1,B'0100',48(R4)  Store IEEE Flags in results table
                                                                           168 *      Load and Test value short RRE
0000000000000318  B29D 0000                             0000000000000000   169          LFPC  R0            Load reference copy of FPC
000000000000031C  B302 00C0                                                170          LTEBR R12,R0        Load and test
0000000000000320  70C0 0918                             0000000000000918   171          STE   R12,LTEBRTST  Save tested value for SNaN->QNaN test (last iteration)
0000000000000324  B222 0010                                                172          IPM   R1            Get condition code and program mask
0000000000000328  8810 001C                             000000000000001C   173          SRL   R1,28         Isolate CC in low order byte
000000000000032C  4210 3050                             0000000000000050   174          STC   R1,80(0,R3)   Save condition code in results table
0000000000000330  B38C 0010                                                175          EFPC  R1            Get result FPC
0000000000000334  BE14 4050                             0000000000000050   176          STCM  R1,B'0100',80(R4)  Store IEEE Flags in results table
                                                                           177 *     Test Data Class short RRE
0000000000000338  B29D 0000                             0000000000000000   178          LFPC  R0            Load reference copy of FPC
000000000000033C  4810 8000                             0000000000000000   179          LH    R1,0(0,R8)    Get test data class mask value for True
0000000000000340  ED00 1000 0010                        0000000000000000   180          TCEB  R0,0(0,R1)    Test Data Class, set condition code
0000000000000346  B222 0010                                                181          IPM   R1            Get condition code and program mask
000000000000034A  8810 001C                             000000000000001C   182          SRL   R1,28         Isolate CC in low order byte
000000000000034E  4210 3068                             0000000000000068   183          STC   R1,104(0,R3)  Save condition code in results table
0000000000000352  4810 8002                             0000000000000002   184          LH    R1,2(0,R8)    Get test data class mask value for False
0000000000000356  ED00 1000 0010                        0000000000000000   185          TCEB  R0,0(0,R1)    Test Data Class, set condition code
000000000000035C  B222 0010                                                186          IPM   R1            Get condition code and program mask
0000000000000360  8810 001C                             000000000000001C   187          SRL   R1,28         Isolate CC in low order byte
0000000000000364  4210 3070                             0000000000000070   188          STC   R1,112(0,R3)  Save condition code in results table
                                                                           189 *
0000000000000368  07FB                                                     190          BR    R11           Tests done, return to loop control
                                                                           191 *
                                                                           192 *     Next iteration of long BFP instruction testing
                                                                           193 *
000000000000036A  6800 9000                             0000000000000000   194 LONGS    LD    R0,0(0,R9)    Load BFP long first value
000000000000036E  68D0 9008                             0000000000000008   195          LD    R13,8(0,R9)   Load BFP long second value
0000000000000372  2810                                                     196          LDR   R1,R0         Copy second value for CDBR RRE
                                                                           197 *     Compare value pair using long RXE
0000000000000374  B384 0000                                                198          SFPC  R0            Load reference copy of FPC
0000000000000378  ED00 9008 0019                        0000000000000008   199          CDB   R0,8(0,R9)    Compare first and second values
000000000000037E  B222 0010                                                200          IPM   R1            Get condition code and program mask
0000000000000382  8810 001C                             000000000000001C   201          SRL   R1,28         Isolate CC in low order byte
0000000000000386  4210 3010                             0000000000000010   202          STC   R1,16(0,R3)   Save condition code in results table
000000000000038A  B38C 0010                                                203          EFPC  R1            Get result FPC
000000000000038E  BE14 4010                             0000000000000010   204          STCM  R1,B'0100',16(R4)  Store IEEE Flags in results table
                                                                           205 *     Compare value pair using long RRE
0000000000000392  B29D 0000                             0000000000000000   206          LFPC  R0            Load reference copy of FPC
0000000000000396  B319 001D                                                207          CDBR  R1,R13        Compare first and second values
000000000000039A  B222 0010                                                208          IPM   R1            Get condition code and program mask
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000039E  8810 001C                             000000000000001C   209          SRL   R1,28         Isolate CC in low order byte
00000000000003A2  4210 3018                             0000000000000018   210          STC   R1,24(0,R3)   Save condition code in results table
00000000000003A6  B38C 0010                                                211          EFPC  R1            Get result FPC
00000000000003AA  BE14 4018                             0000000000000018   212          STCM  R1,B'0100',24(R4)  Store IEEE Flags in results table
                                                                           213 *     Compare and Signal value pair using long RXE
00000000000003AE  B384 0000                                                214          SFPC  R0            Load reference copy of FPC
00000000000003B2  ED00 9008 0018                        0000000000000008   215          KDB   R0,8(0,R9)    Compare first and second values
00000000000003B8  B222 0010                                                216          IPM   R1            Get condition code and program mask
00000000000003BC  8810 001C                             000000000000001C   217          SRL   R1,28         Isolate CC in low order byte
00000000000003C0  4210 3038                             0000000000000038   218          STC   R1,56(0,R3)   Save condition code in results table
00000000000003C4  B38C 0010                                                219          EFPC  R1            Get result FPC
00000000000003C8  BE14 4038                             0000000000000038   220          STCM  R1,B'0100',56(R4)  Store IEEE Flags in results table
                                                                           221 *      Compare and Signal value pair using long RRE
00000000000003CC  B29D 0000                             0000000000000000   222          LFPC  R0            Load reference copy of FPC
00000000000003D0  B318 001D                                                223          KDBR  R1,R13        Generate RRE s*s=s product
00000000000003D4  B222 0010                                                224          IPM   R1            Get condition code and program mask
00000000000003D8  8810 001C                             000000000000001C   225          SRL   R1,28         Isolate CC in low order byte
00000000000003DC  4210 3040                             0000000000000040   226          STC   R1,64(0,R3)   Save condition code in results table
00000000000003E0  B38C 0010                                                227          EFPC  R1            Get result FPC
00000000000003E4  BE14 4040                             0000000000000040   228          STCM  R1,B'0100',64(R4)  Store IEEE Flags in results table
                                                                           229 *     Load and Test value long RRE
00000000000003E8  B29D 0000                             0000000000000000   230          LFPC  R0            Load reference copy of FPC
00000000000003EC  B312 00C0                                                231          LTDBR R12,R0        Load and test
00000000000003F0  60C0 0910                             0000000000000910   232          STD   R12,LTDBRTST  Save tested value for SNaN->QNaN test (last iteration)
00000000000003F4  B222 0010                                                233          IPM   R1            Get condition code and program mask
00000000000003F8  8810 001C                             000000000000001C   234          SRL   R1,28         Isolate CC in low order byte
00000000000003FC  4210 3058                             0000000000000058   235          STC   R1,88(0,R3)   Save condition code in results table
0000000000000400  B38C 0010                                                236          EFPC  R1            Get result FPC
0000000000000404  BE14 4058                             0000000000000058   237          STCM  R1,B'0100',88(R4)  Store IEEE Flags in results table
                                                                           238 *     Test Data Class long RRE
0000000000000408  B29D 0000                             0000000000000000   239          LFPC  R0            Load reference copy of FPC
000000000000040C  4810 8000                             0000000000000000   240          LH    R1,0(0,R8)    Get test data class mask value for True
0000000000000410  ED00 1000 0011                        0000000000000000   241          TCDB  R0,0(0,R1)    Test Data Class, set condition code
0000000000000416  B222 0010                                                242          IPM   R1            Get condition code and program mask
000000000000041A  8810 001C                             000000000000001C   243          SRL   R1,28         Isolate CC in low order byte
000000000000041E  4210 3078                             0000000000000078   244          STC   R1,120(0,R3)  Save condition code in results table
0000000000000422  4810 8002                             0000000000000002   245          LH    R1,2(0,R8)    Get test data class mask value for False
0000000000000426  ED00 1000 0011                        0000000000000000   246          TCDB  R0,0(0,R1)    Test Data Class, set condition code
000000000000042C  B222 0010                                                247          IPM   R1            Get condition code and program mask
0000000000000430  8810 001C                             000000000000001C   248          SRL   R1,28         Isolate CC in low order byte
0000000000000434  4210 3080                             0000000000000080   249          STC   R1,128(0,R3)  Save condition code in results table
                                                                           250 *
0000000000000438  07FB                                                     251          BR    R11           Tests done, return to loop control
                                                                           252 *
                                                                           253 *     Next iteration of long BFP instruction testing
                                                                           254 *
000000000000043A  6800 A000                             0000000000000000   255 EXTDS    LD    R0,0(0,R10)   Load BFP extended first value part 1
000000000000043E  6820 A008                             0000000000000008   256          LD    R2,8(0,R10)   Load BFP extended second value part 1
0000000000000442  68D0 A010                             0000000000000010   257          LD    R13,16(0,R10) Load BFP extended first value part 1
0000000000000446  68F0 A018                             0000000000000018   258          LD    R15,24(0,R10) Load BFP extended second value part 1
000000000000044A  B365 0010                                                259          LXR   R1,R0         Copy second value for CDBR RRE
                                                                           260 *     Compare value pair using extended RRE
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000044E  B29D 0000                             0000000000000000   261          LFPC  R0            Load reference copy of FPC
0000000000000452  B349 001D                                                262          CXBR  R1,R13        Compare first and second values
0000000000000456  B222 0010                                                263          IPM   R1            Get condition code and program mask
000000000000045A  8810 001C                             000000000000001C   264          SRL   R1,28         Isolate CC in low order byte
000000000000045E  4210 3020                             0000000000000020   265          STC   R1,32(0,R3)   Save condition code in results table
0000000000000462  B38C 0010                                                266          EFPC  R1            Get result FPC
0000000000000466  BE14 4020                             0000000000000020   267          STCM  R1,B'0100',32(R4)  Store IEEE Flags in results table
                                                                           268 *      Compare and Signal value pair using extended RRE
000000000000046A  B29D 0000                             0000000000000000   269          LFPC  R0            Load reference copy of FPC
000000000000046E  B348 001D                                                270          KXBR  R1,R13        Generate RRE s*s=s product
0000000000000472  B222 0010                                                271          IPM   R1            Get condition code and program mask
0000000000000476  8810 001C                             000000000000001C   272          SRL   R1,28         Isolate CC in low order byte
000000000000047A  4210 3048                             0000000000000048   273          STC   R1,72(0,R3)   Save condition code in results table
000000000000047E  B38C 0010                                                274          EFPC  R1            Get result FPC
0000000000000482  BE14 4048                             0000000000000048   275          STCM  R1,B'0100',72(R4)  Store IEEE Flags in results table
                                                                           276 *     Load and Test value extended RRE
0000000000000486  B29D 0000                             0000000000000000   277          LFPC  R0            Load reference copy of FPC
000000000000048A  B342 00C0                                                278          LTXBR R12,R0        Load and test
000000000000048E  60C0 0900                             0000000000000900   279          STD   R12,LTXBRTST  Save tested value for SNaN->QNaN test (last iteration)
                                                                           280 *  need 2nd half of store
0000000000000492  B222 0010                                                281          IPM   R1            Get condition code and program mask
0000000000000496  8810 001C                             000000000000001C   282          SRL   R1,28         Isolate CC in low order byte
000000000000049A  4210 3060                             0000000000000060   283          STC   R1,96(0,R3)   Save condition code in results table
000000000000049E  B38C 0010                                                284          EFPC  R1            Get result FPC
00000000000004A2  BE14 4060                             0000000000000060   285          STCM  R1,B'0100',96(R4)  Store IEEE Flags in results table
                                                                           286 *     Test Data Class extended RRE
00000000000004A6  B29D 0000                             0000000000000000   287          LFPC  R0            Load reference copy of FPC
00000000000004AA  4810 8000                             0000000000000000   288          LH    R1,0(0,R8)    Get test data class mask value for True
00000000000004AE  ED00 1000 0012                        0000000000000000   289          TCXB  R0,0(0,R1)    Test Data Class, set condition code
00000000000004B4  B222 0010                                                290          IPM   R1            Get condition code and program mask
00000000000004B8  8810 001C                             000000000000001C   291          SRL   R1,28         Isolate CC in low order byte
00000000000004BC  4210 3088                             0000000000000088   292          STC   R1,136(0,R3)  Save condition code in results table
00000000000004C0  4810 8002                             0000000000000002   293          LH    R1,2(0,R8)    Get test data class mask value for False
00000000000004C4  ED00 1000 0012                        0000000000000000   294          TCXB  R0,0(0,R1)    Test Data Class, set condition code
00000000000004CA  B222 0010                                                295          IPM   R1            Get condition code and program mask
00000000000004CE  8810 001C                             000000000000001C   296          SRL   R1,28         Isolate CC in low order byte
00000000000004D2  4210 3090                             0000000000000090   297          STC   R1,144(0,R3)  Save condition code in results table
                                                                           298 *
00000000000004D6  07FB                                                     299          BR    R11           Tests done, return to loop control
                                                                           300 *
                                                                           301 *  Short BFP Input values.  QNaN,    1,    1,    2,  -inf,   -2,  +inf, SNaN,    0.
                                                                           302 *
00000000000004D8                                                           303 SHORTBFP DS    0F            Ensure fullword alignment for input table
00000000000004D8  FFC00000                                                 304          DC    X'FFC00000'      -QNaN
00000000000004DC  3F800000                                                 305          DC    X'3F800000'      1
00000000000004E0  3F800000                                                 306          DC    X'3F800000'      1
00000000000004E4  40000000                                                 307          DC    X'40000000'      2
00000000000004E8  FF800000                                                 308          DC    X'FF800000'      -infinity
00000000000004EC  807FFFFF                                                 309          DC    X'807FFFFF'      -subnormal (maximum magnitude)
00000000000004F0  7F800000                                                 310          DC    X'7F800000'      +infinity
00000000000004F4  7F810000                                                 311          DC    X'7F810000'      +SNaN
00000000000004F8  00000000                                                 312          DC    X'00000000'      0
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           313 *
                                                                           314 *  Long BFP Input values.  QNaN,    1,    1,    2,  -inf,   -2,  +inf, SNaN,    0.
                                                                           315 *
0000000000000500                                                           316 LONGBFP  DS    0D
0000000000000500  FFF80000 00000000                                        317          DC    X'FFF8000000000000'       -QNaN
0000000000000508  3FF00000 00000000                                        318          DC    X'3FF0000000000000'      1
0000000000000510  3FF00000 00000000                                        319          DC    X'3FF0000000000000'      1
0000000000000518  40000000 00000000                                        320          DC    X'4000000000000000'      2
0000000000000520  FFF00000 00000000                                        321          DC    X'FFF0000000000000'      -infinity
0000000000000528  800FFFFF FFFFFFFF                                        322          DC    X'800FFFFFFFFFFFFF'      -subnormal (maximum magnitude)
0000000000000530  7FF00000 00000000                                        323          DC    X'7FF0000000000000'      +infinity
0000000000000538  7FF01000 00000000                                        324          DC    X'7FF0100000000000'      +SNaN
0000000000000540  00000000 00000000                                        325          DC    X'0000000000000000'      0
                                                                           326 *
                                                                           327 *  Extended BFP Input values.  QNaN,    1,    1,    2,  -inf,   -2,  +inf, SNaN,    0.
                                                                           328 *
0000000000000548                                                           329 EXTDBFP  DS    0D
0000000000000548  FFFF8000 00000000                                        330          DC    X'FFFF8000000000000000000000000000' -QNaN
0000000000000558  3FFF0000 00000000                                        331          DC    X'3FFF0000000000000000000000000000' 1
0000000000000568  3FFF0000 00000000                                        332          DC    X'3FFF0000000000000000000000000000' 1
0000000000000578  40000000 00000000                                        333          DC    X'40000000000000000000000000000000' 2
0000000000000588  FFFF0000 00000000                                        334          DC    X'FFFF0000000000000000000000000000' -infinity
0000000000000598  8000FFFF FFFFFFFF                                        335          DC    X'8000FFFFFFFFFFFFFFFFFFFFFFFFFFFF' -subnormal (maximum magnitude)
00000000000005A8  7FFF0000 00000000                                        336          DC    X'7FFF0000000000000000000000000000' +infinity
00000000000005B8  7FFF0100 00000000                                        337          DC    X'7FFF0100000000000000000000000000' +SNaN
00000000000005C8  00000000 00000000                                        338          DC    X'00000000000000000000000000000000' 0
                                                                           339 *
                                                                           340 * Test data class masks
                                                                           341 * Bit meanings are: 0 0 0 0 | +z -z +norm -norm || +subn -sub +inf -inf | +QNaN -QNaN +SNaN -SNaN
                                                                           342 *
00000000000005D8                                                           343 TDCMASKS DS    0F
00000000000005D8  00040000                                                 344          DC    X'00040000'          0 0 0 0 | 0 0 0 0 || 0 0 0 0 | 0 1 0 0  -QNaN
00000000000005DC  02000000                                                 345          DC    X'02000000'          0 0 0 0 | 0 0 1 0 || 0 0 0 0 | 0 0 0 0  +1
00000000000005E0  02000000                                                 346          DC    X'02000000'          0 0 0 0 | 0 0 1 0 || 0 0 0 0 | 0 0 0 0  +1
00000000000005E4  02000000                                                 347          DC    X'02000000'          0 0 0 0 | 0 0 1 0 || 0 0 0 0 | 0 0 0 0  +2
00000000000005E8  00100000                                                 348          DC    X'00100000'          0 0 0 0 | 0 0 0 0 || 0 0 0 1 | 0 0 0 0  -inf
00000000000005EC  00400000                                                 349          DC    X'00400000'          0 0 0 0 | 0 0 0 0 || 0 1 0 0 | 0 0 0 0  -2
00000000000005F0  00200000                                                 350          DC    X'00200000'          0 0 0 0 | 0 0 0 0 || 0 0 1 0 | 0 0 0 0  +inf
00000000000005F4  00020000                                                 351          DC    X'00020000'          0 0 0 0 | 0 0 0 0 || 0 0 0 0 | 0 0 2 0  +SNaN
                                                                           352
00000000000005F8                      00000000000005F8  0000000000000700   353          ORG   BFPCOMPS+X'700'
0000000000000700  00000000 00000000                                        354 RESULTCC DS    19D      8 Condition codes from each of 19 instructions
                                                                           355 *                       (  +0)          COMPARE short RXE results
                                                                           356 *                       (  +8)          COMPARE short RRE results
                                                                           357 *                       ( +16)          COMPARE long RXE results
                                                                           358 *                       ( +24)          COMPARE long RRE results
                                                                           359 *                       ( +32)          COMPARE extended RRE result
                                                                           360 *
                                                                           361 *                       ( +40)          COMPARE AND SIGNAL short RXE results
                                                                           362 *                       ( +48)          COMPARE AND SIGNAL short RRE results
                                                                           363 *                       ( +56)          COMPARE AND SIGNAL long RXE results
                                                                           364 *                       ( +64)          COMPARE AND SIGNAL long RRE results
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     8

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           365 *                       ( +72)          COMPARE AND SIGNAL extended RRE results
                                                                           366 *
                                                                           367 *                       ( +80)          LOAD AND TEST short RRE results
                                                                           368 *                       ( +88)          LOAD AND TEST long RRE results
                                                                           369 *                       ( +96)          LOAD AND TEST extended RRE results
                                                                           370 *
                                                                           371 *                       (+104)          TEST DATA CLASS short RRE results (True results)
                                                                           372 *                       (+112)          TEST DATA CLASS short RRE results (False results)
                                                                           373 *                       (+120)          TEST DATA CLASS long RRE results (True results)
                                                                           374 *                       (+128)          TEST DATA CLASS long RRE results (False results)
                                                                           375 *                       (+136)          TEST DATA CLASS extended RRE results (True results)
                                                                           376 *                       (+144)          TEST DATA CLASS extended RRE results (False results)
                                                                           377 *
0000000000000798                      0000000000000798  0000000000000800   378          ORG   BFPCOMPS+X'800'
0000000000000800  00000000 00000000                                        379 RESULTFL DS    13D      8 IEEE flag bytes from each of 13 instructions
                                                                           380 *                       (TEST DATA CLASS does not set IEEE flags)
                                                                           381 *                       (  +0)          COMPARE short RXE results
                                                                           382 *                       (  +8)          COMPARE short RRE results
                                                                           383 *                       ( +16)          COMPARE long RXE results
                                                                           384 *                       ( +24)          COMPARE long RRE results
                                                                           385 *                       ( +32)          COMPARE extended RRE result
                                                                           386 *
                                                                           387 *                       ( +40)          COMPARE AND SIGNAL short RXE results
                                                                           388 *                       ( +48)          COMPARE AND SIGNAL short RRE results
                                                                           389 *                       ( +56)          COMPARE AND SIGNAL long RXE results
                                                                           390 *                       ( +64)          COMPARE AND SIGNAL long RRE results
                                                                           391 *                       ( +72)          COMPARE AND SIGNAL extended RRE results
                                                                           392 *
                                                                           393 *                       ( +80)          LOAD AND TEST short RRE results
                                                                           394 *                       ( +88)          LOAD AND TEST long RRE results
                                                                           395 *                       ( +96)          LOAD AND TEST extended RRE results
                                                                           396 *
0000000000000868                      0000000000000868  0000000000000900   397          ORG   BFPCOMPS+X'900'
0000000000000900  00000000 00000000                                        398 LTXBRTST DS    2D   LOAD AND TEST Extended result (to test conversion of SNaN into QNaN)
0000000000000910  00000000 00000000                                        399 LTDBRTST DS    D    LOAD AND TEST Long result (to test conversion of SNaN into QNaN)
0000000000000918  00000000                                                 400 LTEBRTST DS    F    LOAD AND TEST Short result (to test conversion of SNaN into QNaN)
000000000000091C                                                           401          END
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page     9

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPCOMPS            J    000000    2332    63   81   83   85  353  378  397
CTLR0               F    000228       4    98   87   88   89
EXTDBFP             D    000548       8   329  112
EXTDS               I    00043A       4   255  117
IMAGE               1    000000    2332     0
LONGBFP             D    000500       8   316  111
LONGS               I    00036A       4   194  116
LTDBRTST            D    000910       8   399  232
LTEBRTST            F    000918       4   400  171
LTXBRTST            D    000900       8   398  279
R0                  U    000000       1    64   87   89   90  130  133  135  137  138  145  153  154  161  169  170  178  180  185
                                               194  196  198  199  206  214  215  222  230  231  239  241  246  255  259  261  269
                                               277  278  287  289  294
R1                  U    000001       1    65  131  135  139  140  141  142  143  146  147  148  149  150  151  155  156  157  158
                                               159  162  163  164  165  166  167  172  173  174  175  176  179  180  181  182  183
                                               184  185  186  187  188  196  200  201  202  203  204  207  208  209  210  211  212
                                               216  217  218  219  220  223  224  225  226  227  228  233  234  235  236  237  240
                                               241  242  243  244  245  246  247  248  249  259  262  263  264  265  266  267  270
                                               271  272  273  274  275  281  282  283  284  285  288  289  290  291  292  293  294
                                               295  296  297
R10                 U    00000A       1    74  112  123  255  256  257  258
R11                 U    00000B       1    75   91   93  115  116  117  190  251  299
R12                 U    00000C       1    76   92  126  170  171  231  232  278  279
R13                 U    00000D       1    77  113  124  132  134  146  162  195  207  223  257  262  270
R14                 U    00000E       1    78   94   95
R15                 U    00000F       1    79  258
R2                  U    000002       1    66  106  124  256
R3                  U    000003       1    67  107  118  141  149  157  165  174  183  188  202  210  218  226  235  244  249  265
                                               273  283  292  297
R4                  U    000004       1    68  108  119  143  151  159  167  176  204  212  220  228  237  267  275  285
R5                  U    000005       1    69
R6                  U    000006       1    70
R7                  U    000007       1    71  109  120  133  134  138  154
R8                  U    000008       1    72  110  121  179  184  240  245  288  293
R9                  U    000009       1    73  111  122  194  195  199  215
RESULTCC            D    000700       8   354  107
RESULTFL            D    000800       8   379  108
SAVER11             D    000230       8    99   91   93
SHORTBFP            F    0004D8       4   303  109
SHORTS              I    00028E       4   130  115
STARTTST            I    000200       4    87   82
TDCMASKS            F    0005D8       4   343  110
TESTCOMP            H    000248       2   105   92
WAITPSW             X    000238      16   100   96
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page    10

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page    11

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     2332  000-91B  000-91B
  Region             2332  000-91B  000-91B
    CSECT  BFPCOMPS  2332  000-91B  000-91B
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:48  Page    12

   STMT                            FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-comps.asm


** NO ERRORS FOUND **

