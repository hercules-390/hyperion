ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 *
                                                                             2 *  Divide adjacent pairs of values in the input set (five values means four
                                                                             3 *  quotients).  Test data: 1, 2, 4, -2, -2; expected quotients 0.5, 0.5, -2, 1
                                                                             4 *  Load Floating Point Integer of the above result set.  Expected values 0, 0, -2, 1
                                                                             5 *  For short and long BFP, divide adjacent pairs using DIVIDE TO INTEGER.
                                                                             6 *      Expected quotient/remainder pairs: 0/1, 0/2, 2/0, 1/-0 (Yes, minus zero)
                                                                             7 *
                                                                             8 * Tests seven division instructions:
                                                                             9 *   DIVIDE (BFP short RRE) DEBR
                                                                            10 *   DIVIDE (BFP short RXE) DEB
                                                                            11 *   DIVIDE (BFP long, RRE) DDBR
                                                                            12 *   DIVIDE (BFP long, RXE) DDB
                                                                            13 *   DIVIDE (BFP extended, RRE) DXBR
                                                                            14 *   DIVIDE TO INTEGER (BFP short RRE) DIEBR
                                                                            15 *   DIVIDE TO INTEGER (BFP long RRE) DIDBR
                                                                            16 *
                                                                            17 * Also tests the following six conversion instructions
                                                                            18 *   LOAD ROUNDED (long BFP to short BFP, RRE) LEDBR
                                                                            19 *   LOAD ROUNDED (extended BFP to short BFP, RRE) LEXBR
                                                                            20 *   LOAD ROUNDED (extended BFP to long BFP, RRE) LDXBR
                                                                            21 *   LOAD FP INTEGER (BFP short RRE) FIEBR
                                                                            22 *   LOAD FP INTEGER (BFP long RRE) FIDBR
                                                                            23 *   LOAD FP INTEGER (BFP extended RRE) FIXBR
                                                                            24 *
                                                                            25 * Intermediate results from the Load Rounded instructions are not saved.  Because
                                                                            26 * zero is not present in the test set, any error in Load Rounded will appear in
                                                                            27 * the resulting quotients, remainders, and integer floating point values.
                                                                            28 *
                                                                            29 * Also tests the following floating point support instructions
                                                                            30 *   LOAD  (Short)
                                                                            31 *   LOAD  (Long)
                                                                            32 *   LOAD ZERO (Long)
                                                                            33 *   STORE (Short)
                                                                            34 *   STORE (Long)
                                                                            35 *
                                                                            36 *
                                                                            37 *
                                      0000000000000000  0000000000000757    38 BFPDIVS  START 0
                                      0000000000000000  0000000000000001    39 R0       EQU   0
                                      0000000000000001  0000000000000001    40 R1       EQU   1
                                      0000000000000002  0000000000000001    41 R2       EQU   2
                                      0000000000000003  0000000000000001    42 R3       EQU   3
                                      0000000000000004  0000000000000001    43 R4       EQU   4
                                      0000000000000005  0000000000000001    44 R5       EQU   5
                                      0000000000000006  0000000000000001    45 R6       EQU   6
                                      0000000000000007  0000000000000001    46 R7       EQU   7
                                      0000000000000008  0000000000000001    47 R8       EQU   8
                                      0000000000000009  0000000000000001    48 R9       EQU   9
                                      000000000000000A  0000000000000001    49 R10      EQU   10
                                      000000000000000B  0000000000000001    50 R11      EQU   11
                                      000000000000000C  0000000000000001    51 R12      EQU   12
                                      000000000000000D  0000000000000001    52 R13      EQU   13
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      000000000000000E  0000000000000001    53 R14      EQU   14
                                      000000000000000F  0000000000000001    54 R15      EQU   15
0000000000000000                      0000000000000000                      55          USING *,0
                                                                            56 *
0000000000000000                      0000000000000000  00000000000001A0    57          ORG   BFPDIVS+X'1A0'
00000000000001A0  00000001 80000000                                         58          DC    X'0000000180000000',AD(STARTDIV)       z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    59          ORG   BFPDIVS+X'1D0'
00000000000001D0  00020000 00000000                                         60          DC    X'0002000000000000000000000000DEAD' z/Arch pgm chk new PSW
00000000000001E0                      00000000000001E0  0000000000000200    61          ORG   BFPDIVS+X'200'
                                                                            62 *
                                                                            63 * Mainline program.
0000000000000200  B600 0744                             0000000000000744    64 STARTDIV STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000204  9604 0745                             0000000000000745    65          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000208  B700 0744                             0000000000000744    66          LCTL  R0,R0,CTLR0    Reload updated CR0
000000000000020C  4DC0 0600                             0000000000000600    67          BAS   R12,TESTDIV    Perform divisions
0000000000000210  B2B2 0748                             0000000000000748    68          LPSWE WAITPSW        All done, load disabled wait PSW
                                                                            69 *
                                                                            70 * BFP Division Short RXE and RRE
                                                                            71 * Use Load Rounded to shrink extended BFP into the shorts needed for this test.
                                                                            72 *
0000000000000214                      0000000000000214  0000000000000600    73          ORG   BFPDIVS+X'600'
0000000000000600                                                            74 TESTDIV  DS    0H
0000000000000600  4120 0004                             0000000000000004    75          LA    R2,4           Set count of division operations
0000000000000604  4130 0420                             0000000000000420    76          LA    R3,SHORTRES    Point to start of short BFP quotients
0000000000000608  4140 04C0                             00000000000004C0    77          LA    R4,SHORTDTI    Point to short Divide Integer quotients and remainders
000000000000060C  4150 04E0                             00000000000004E0    78          LA    R5,SHORTLFP    Point to short Load Floating Point Integer results
0000000000000610  4170 0300                             0000000000000300    79          LA    R7,EXTBFPIN    Point to start of extended BFP input values
0000000000000614  0DD0                                                      80          BASR  R13,0          Set top of loop for short BFP tests
                                                                            81 *
                                                                            82 *     Top of loop; clear residuals from FPR1, 4, 5, 8, 9.
0000000000000616  B375 0010                                                 83          LZDR  R1             Zero FPR1
000000000000061A  B375 0040                                                 84          LZDR  R4             Zero FPR4
000000000000061E  B375 0050                                                 85          LZDR  R5             Zero FPR5
0000000000000622  B375 0080                                                 86          LZDR  R8             Zero FPR8
0000000000000626  B375 0090                                                 87          LZDR  R9             Zero FPR9
                                                                            88 *     Collect dividend and divisor, do four divisions, store quotients.
000000000000062A  6800 7000                             0000000000000000    89          LD    R0,0(0,R7)     Get BFP ext dividend part 1
000000000000062E  6820 7008                             0000000000000008    90          LD    R2,8(0,R7)     Get BFP ext dividend part 2
0000000000000632  68D0 7010                             0000000000000010    91          LD    R13,16(0,R7)   Get BFP ext divisor part 1
0000000000000636  68F0 7018                             0000000000000018    92          LD    R15,24(0,R7)   Get BFP ext divisor part 2
000000000000063A  B345 0010                                                 93          LDXBR R1,R0          Round dividend for RXE to long
000000000000063E  B344 0011                                                 94          LEDBR R1,R1          Round dividend for RXE to short
0000000000000642  B346 0050                                                 95          LEXBR R5,R0          Round dividend for RRE
0000000000000646  3895                                                      96          LER   R9,R5          Save dividend for Divide to Integer
0000000000000648  B346 004D                                                 97          LEXBR R4,R13         Round divisor for RRE
000000000000064C  7040 3000                             0000000000000000    98          STE   R4,0(0,R3)     Save divisor for RXE
0000000000000650  B353 8094                                                 99          DIEBR R9,R8,R4       Divide to Integer, quotient in R8, remainder in R9
0000000000000654  ED10 3000 000D                        0000000000000000   100          DEB   R1,0(0,R3)     Generate RXE
000000000000065A  B30D 0054                                                101          DEBR  R5,R4          Generate RRE
000000000000065E  B357 0045                                                102          FIEBR R4,0,R5        Load result as Floating Point Integer
0000000000000662  7010 3000                             0000000000000000   103          STE   R1,0(0,R3)     Store short BFP RXE
0000000000000666  7050 3004                             0000000000000004   104          STE   R5,4(0,R3)     Store short BFP RRE
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000066A  7080 4000                             0000000000000000   105          STE   R8,0(0,R4)     Store divide to integer quotient
000000000000066E  7090 4004                             0000000000000004   106          STE   R9,4(0,R4)     Store divide to integer remainder
0000000000000672  7040 5000                             0000000000000000   107          STE   R4,0(0,R5)     Store load FP integer result
0000000000000676  4170 7010                             0000000000000010   108          LA    R7,16(0,R7)    Point to next extended BFP input pair
000000000000067A  4130 3008                             0000000000000008   109          LA    R3,8(0,R3)     Point to next short BFP result pair
000000000000067E  4140 4008                             0000000000000008   110          LA    R4,8(0,R4)     Point to next Divide to Integer result
0000000000000682  4150 5004                             0000000000000004   111          LA    R5,4(0,R5)     Point to next Load FP Integer result
0000000000000686  062D                                                     112          BCTR  R2,R13         Loop through all short BFP test cases
                                                                           113 *
                                                                           114 * BFP Division long RXE and RRE
                                                                           115 * Use Load Rounded to shrink extended BFP input into the longs needed for this test.
                                                                           116 *
0000000000000688                                                           117 TESTLONG DS    0H
0000000000000688  4120 0004                             0000000000000004   118          LA    R2,4           Set count of division operations
000000000000068C  4130 0440                             0000000000000440   119          LA    R3,LONGRES     Point to start of long BFP quotients
0000000000000690  4140 0500                             0000000000000500   120          LA    R4,LONGDTI     Point to short Divide Integer quotients and remainders
0000000000000694  4150 0540                             0000000000000540   121          LA    R5,LONGLFP     Point to short Load Floating Point Integer results
0000000000000698  4170 0300                             0000000000000300   122          LA    R7,EXTBFPIN    Point to start of extended BFP input values
000000000000069C  0DD0                                                     123          BASR  R13,0          Set top of loop for long BFP tests
                                                                           124 *     Top of loop
                                                                           125 *     Collect dividend and divisor, shorten them, do four divisions, store quotients
000000000000069E  6800 7000                             0000000000000000   126          LD    R0,0(0,R7)     Get BFP ext dividend part 1
00000000000006A2  6820 7008                             0000000000000008   127          LD    R2,8(0,R7)     Get BFP ext dividend part 2
00000000000006A6  68D0 7010                             0000000000000010   128          LD    R13,16(0,R7)   Get BFP ext divisor part 1
00000000000006AA  68F0 7018                             0000000000000018   129          LD    R15,24(0,R7)   Get BFP ext divisor part 2
00000000000006AE  B345 0010                                                130          LDXBR R1,R0          Round dividend for RXE
00000000000006B2  B345 0050                                                131          LDXBR R5,R0          Round dividend for RRE
00000000000006B6  2895                                                     132          LDR   R9,R5          Save dividend for divide to Integer
00000000000006B8  B345 004D                                                133          LDXBR R4,R13         Round divisor for RRE
00000000000006BC  6040 3000                             0000000000000000   134          STD   R4,0(0,R3)     Save divisor for RXE
00000000000006C0  B35B 8094                                                135          DIDBR R9,R8,R4       Divide to Integer, quotient in R8, remainder in R9
00000000000006C4  ED10 3000 001D                        0000000000000000   136          DDB   R1,0(0,R3)     Generate RXE long
00000000000006CA  B31D 0054                                                137          DDBR  R5,R4          Generate RRE long
00000000000006CE  B35F 0045                                                138          FIDBR R4,0,R5        Load result as Floating Point Integer
00000000000006D2  6010 3000                             0000000000000000   139          STD   R1,0(0,R3)     Store long BFP RXE quotient
00000000000006D6  6050 3008                             0000000000000008   140          STD   R5,8(0,R3)     Store long BFP RRE quotient
00000000000006DA  6080 4000                             0000000000000000   141          STD   R8,0(0,R4)     Store long BFP divide to integer quotient
00000000000006DE  6090 4008                             0000000000000008   142          STD   R9,8(0,R4)     Store long BFP divide to integer remainder
00000000000006E2  6040 5000                             0000000000000000   143          STD   R4,0(0,R5)     Store long BFP load FP integer result
00000000000006E6  4170 7010                             0000000000000010   144          LA    R7,16(0,R7)    Point to next extended BFP input pair
00000000000006EA  4130 3010                             0000000000000010   145          LA    R3,16(0,R3)    Point to next long BFP result pair
00000000000006EE  4140 4010                             0000000000000010   146          LA    R4,16(0,R4)    Point to next long BFP divide to integer quotient and remainder
00000000000006F2  4150 5008                             0000000000000008   147          LA    R5,8(0,R5)     Point to next long BFP Load FP Integer result
00000000000006F6  062D                                                     148          BCTR  R2,R13         Loop through all long test cases
                                                                           149 *
                                                                           150 * BFP division extended, RRE only.  We do two divisions per input pair so we can
                                                                           151 * test a diversity of Load Rounded instructions.
                                                                           152 *
00000000000006F8                                                           153 TESTEXT  DS    0H
00000000000006F8  4120 0004                             0000000000000004   154          LA    R2,4           Set count of division operations
00000000000006FC  4140 0480                             0000000000000480   155          LA    R4,EXTDRES     Point to start of extended BFP quotients
0000000000000700  4150 0560                             0000000000000560   156          LA    R5,EXTLFP      Point to start of extended Load FP Integer results
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000704  4170 0300                             0000000000000300   157          LA    R7,EXTBFPIN    Point to start of extended BFP input values
0000000000000708  0DD0                                                     158          BASR  R13,0          Set top of loop for l*l tests
                                                                           159 *     Top of loop
                                                                           160 *     Collect dividend & divisor, do division and Load FP Integer, store results.
000000000000070A  6800 7000                             0000000000000000   161          LD    R0,0(0,R7)     Get BFP ext dividend part 1
000000000000070E  6820 7008                             0000000000000008   162          LD    R2,8(0,R7)     Get BFP ext dividend part 2
0000000000000712  68D0 7010                             0000000000000010   163          LD    R13,16(0,R7)   Get BFP ext divisor part 1
0000000000000716  68F0 7018                             0000000000000018   164          LD    R15,24(0,R7)   Get BFP ext divisor part 2
000000000000071A  B34D 000D                                                165          DXBR  R0,R13         Generate RRE extended quotient
000000000000071E  B347 0010                                                166          FIXBR R1,0,R0        create Load FP Integer result
0000000000000722  6000 4000                             0000000000000000   167          STD   R0,0(0,R4)     Store extended BFP RRE quotient part 1
0000000000000726  6020 4008                             0000000000000008   168          STD   R2,8(0,R4)     Store extended BFP RRE quotient part 2
000000000000072A  6010 5000                             0000000000000000   169          STD   R1,0(0,R5)     Store extended BFP Load FP Integer part 1
000000000000072E  6030 5008                             0000000000000008   170          STD   R3,8(0,R5)     Store extended BFP Load FP Integer part 2
0000000000000732  4170 7010                             0000000000000010   171          LA    R7,16(0,R7)    Point to next extended BFP input pair
0000000000000736  4140 4010                             0000000000000010   172          LA    R4,16(0,R4)    Point to next extended BFP result
000000000000073A  4150 5010                             0000000000000010   173          LA    R5,16(0,R5)    Point to next extended BFP Load FP Result
000000000000073E  062D                                                     174          BCTR  R2,R13         Loop through all test cases
                                                                           175 *
0000000000000740  07FC                                                     176          BR    R12            Tests done, return to mainline
                                                                           177 *
                                                                           178 *
0000000000000744  00000000                                                 179 CTLR0    DS    F              Control register 0 (bit45 AFP control)
0000000000000748                                                           180          DS    0D             Ensure doubleword alignment
0000000000000748  00020000 00000000                                        181 WAITPSW  DC    X'00020000000000000000000000000000' Disabled wait state PSW - normal completion
                                                                           182 *
0000000000000758                      0000000000000758  0000000000000300   183          ORG  BFPDIVS+X'300'
0000000000000300                                                           184 EXTBFPIN DS   0D
0000000000000300  3FFF0000 00000000                                        185          DC    X'3FFF0000000000000000000000000000' 1.0 BFP Extended
0000000000000310  40000000 00000000                                        186          DC    X'40000000000000000000000000000000' 2.0 BFP Extended
0000000000000320  40010000 00000000                                        187          DC    X'40010000000000000000000000000000' 4.0 BFP Extended
0000000000000330  C0000000 00000000                                        188          DC    X'C0000000000000000000000000000000' -2.0 BFP Extended
0000000000000340  C0000000 00000000                                        189          DC    X'C0000000000000000000000000000000' -2.0 BFP Extended
                                                                           190 *
0000000000000350                      0000000000000350  0000000000000420   191          ORG  BFPDIVS+X'420'
0000000000000420  00000000 00000000                                        192 SHORTRES DS   8F     420.20   Results from short divide, four pairs
0000000000000440  00000000 00000000                                        193 LONGRES  DS   8D     440.40   Results from long divide, four pairs
0000000000000480  00000000 00000000                                        194 EXTDRES  DS   8D     480.40   Results from extended divide, four results
00000000000004C0  00000000 00000000                                        195 SHORTDTI DS   8F     4C0.20   Results from short Divide to Integer, four quotient/remainder pairs
00000000000004E0  00000000 00000000                                        196 SHORTLFP DS   4F     4E0.10   Results from short Load Floating Point Integer, four results
                                                                           197 *
00000000000004F0                      00000000000004F0  0000000000000500   198          ORG  BFPDIVS+X'500'
0000000000000500  00000000 00000000                                        199 LONGDTI  DS   8D     500.40   Results from long Divide to Integer, four quotient/remainder pairs
0000000000000540  00000000 00000000                                        200 LONGLFP  DS   4D     540.20   Results from long Load Floating Point Integer, four results
0000000000000560  00000000 00000000                                        201 EXTLFP   DS   8D     560.40   Results from Extended Load Floating Point Integer, four results
                                                                           202 *
00000000000005A0                                                           203          END
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     5

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPDIVS             J    000000    1880    38   57   59   61   73  183  191  198
CTLR0               F    000744       4   179   64   65   66
EXTBFPIN            D    000300       8   184   79  122  157
EXTDRES             D    000480       8   194  155
EXTLFP              D    000560       8   201  156
IMAGE               1    000000    1880     0
LONGDTI             D    000500       8   199  120
LONGLFP             D    000540       8   200  121
LONGRES             D    000440       8   193  119
R0                  U    000000       1    39   64   66   89   93   95  126  130  131  161  165  166  167
R1                  U    000001       1    40   83   93   94  100  103  130  136  139  166  169
R10                 U    00000A       1    49
R11                 U    00000B       1    50
R12                 U    00000C       1    51   67  176
R13                 U    00000D       1    52   80   91   97  112  123  128  133  148  158  163  165  174
R14                 U    00000E       1    53
R15                 U    00000F       1    54   92  129  164
R2                  U    000002       1    41   75   90  112  118  127  148  154  162  168  174
R3                  U    000003       1    42   76   98  100  103  104  109  119  134  136  139  140  145  170
R4                  U    000004       1    43   77   84   97   98   99  101  102  105  106  107  110  120  133  134  135  137  138
                                               141  142  143  146  155  167  168  172
R5                  U    000005       1    44   78   85   95   96  101  102  104  107  111  121  131  132  137  138  140  143  147
                                               156  169  170  173
R6                  U    000006       1    45
R7                  U    000007       1    46   79   89   90   91   92  108  122  126  127  128  129  144  157  161  162  163  164
                                               171
R8                  U    000008       1    47   86   99  105  135  141
R9                  U    000009       1    48   87   96   99  106  132  135  142
SHORTDTI            F    0004C0       4   195   77
SHORTLFP            F    0004E0       4   196   78
SHORTRES            F    000420       4   192   76
STARTDIV            I    000200       4    64   58
TESTDIV             H    000600       2    74   67
TESTEXT             H    0006F8       2   153
TESTLONG            H    000688       2   117
WAITPSW             X    000748      16   181   68
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     6

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     7

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    1880  000-757  000-757
  Region            1880  000-757  000-757
    CSECT  BFPDIVS  1880  000-757  000-757
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     8

   STMT                            FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-divs.asm


** NO ERRORS FOUND **

