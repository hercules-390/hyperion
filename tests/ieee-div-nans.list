ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 *
                                                                             2 *  Divide adjacent pairs of values in the input set (six values means five results).
                                                                             3 *
                                                                             4 *  Test data:         2,    0,      QNaN(1),      QNaN(2),      SNaN(3),      SNaN(4).
                                                                             5 *  Expected Results    +inf, QNaN(1),      QNaN(1),      SNaN(3),      SNaN(3).
                                                                             6 *
                                                                             7 *  NaN payload--in parentheses--is used to confirm that the right NaN ends up in the result.
                                                                             8 *
                                                                             9 * Tests seven division instructions:
                                                                            10 *   DIVIDE (BFP short RRE) DEBR
                                                                            11 *   DIVIDE (BFP short RXE) DEB
                                                                            12 *   DIVIDE (BFP long, RRE) DDBR
                                                                            13 *   DIVIDE (BFP long, RXE) DDB
                                                                            14 *   DIVIDE (BFP extended, RRE) DXBR
                                                                            15 *
                                                                            16 * Interrupts are masked; no program checks are expected
                                                                            17 *
                                                                            18 * Also tests the following floating point support instructions
                                                                            19 *   LOAD  (Short)
                                                                            20 *   LOAD  (Long)
                                                                            21 *   LOAD ZERO (Long)
                                                                            22 *   STORE (Short)
                                                                            23 *   STORE (Long)
                                                                            24 *
                                      0000000000000000  000000000000057F    25 BFPDIVNA START 0
                                      0000000000000000  0000000000000001    26 R0       EQU   0
                                      0000000000000001  0000000000000001    27 R1       EQU   1
                                      0000000000000002  0000000000000001    28 R2       EQU   2
                                      0000000000000003  0000000000000001    29 R3       EQU   3
                                      0000000000000004  0000000000000001    30 R4       EQU   4
                                      0000000000000005  0000000000000001    31 R5       EQU   5
                                      0000000000000006  0000000000000001    32 R6       EQU   6
                                      0000000000000007  0000000000000001    33 R7       EQU   7
                                      0000000000000008  0000000000000001    34 R8       EQU   8
                                      0000000000000009  0000000000000001    35 R9       EQU   9
                                      000000000000000A  0000000000000001    36 R10      EQU   10
                                      000000000000000B  0000000000000001    37 R11      EQU   11
                                      000000000000000C  0000000000000001    38 R12      EQU   12
                                      000000000000000D  0000000000000001    39 R13      EQU   13
                                      000000000000000E  0000000000000001    40 R14      EQU   14
                                      000000000000000F  0000000000000001    41 R15      EQU   15
0000000000000000                      0000000000000000                      42          USING *,0
0000000000000000                      0000000000000000  00000000000001A0    43          ORG   BFPDIVNA+X'1A0'
00000000000001A0  00000001 80000000                                         44          DC    X'0000000180000000',AD(STARTNAN)       z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    45          ORG   BFPDIVNA+X'1D0'
00000000000001D0  00020000 00000000                                         46          DC    X'0002000000000000000000000000DEAD' z/Arch pgm chk new PSW
00000000000001E0                      00000000000001E0  0000000000000200    47          ORG   BFPDIVNA+X'200'
                                                                            48 *
                                                                            49 * Mainline program.
                                                                            50 *
0000000000000200  B600 02C4                             00000000000002C4    51 STARTNAN STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000204  9604 02C5                             00000000000002C5    52          OI    CTLR0+1,X'04'  Turn on AFP bit
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000208  B700 02C4                             00000000000002C4    53          LCTL  R0,R0,CTLR0    Reload updated CR0
000000000000020C  4DC0 0214                             0000000000000214    54          BAS   R12,TESTDIV    Perform divisions
0000000000000210  B2B2 02C8                             00000000000002C8    55          LPSWE WAITPSW        All done, load disabled wait PSW
                                                                            56 *
                                                                            57 * BFP Division Short RXE and RRE using NaNs as inputs.
                                                                            58 *
                                                                            59 * We cannot use Load Rounded to shrink extended BFP into the shorts needed
                                                                            60 * for this test because Load Rounded will convert the SNaNs into QNaNs
                                                                            61 *
0000000000000214                                                            62 TESTDIV  DS    0H
0000000000000214  4120 0005                             0000000000000005    63          LA    R2,5          Set count of division operations
0000000000000218  4130 0400                             0000000000000400    64          LA    R3,SHORTRES   Point to start of short BFP quotients
000000000000021C  4170 0300                             0000000000000300    65          LA    R7,SHORTBFP   Point to start of short BFP input values
0000000000000220  0DD0                                                      66          BASR  R13,0         Set top of loop for short BFP tests
                                                                            67 *
                                                                            68 *     Top of loop
                                                                            69 *     Clear residuals from FPR0, 4, 5
0000000000000222  B375 0000                                                 70          LZDR  R0            Zero FPR0
0000000000000226  B375 0040                                                 71          LZDR  R4            Zero FPR4
                                                                            72 *     Collect dividend and divisor, do four divisions, store quotients.
000000000000022A  7800 7000                             0000000000000000    73          LE    R0,0(0,R7)    Get BFP ext dividend
000000000000022E  2850                                                      74          LDR   R5,R0         Duplicate dividend for RRE test
0000000000000230  7840 7004                             0000000000000004    75          LE    R4,4(0,R7)    Get BFP ext divisor for RRE test
0000000000000234  ED00 7004 000D                        0000000000000004    76          DEB   R0,4(0,R7)    Generate RXE
000000000000023A  B30D 0054                                                 77          DEBR  R5,R4         Generate RRE
000000000000023E  7000 3000                             0000000000000000    78          STE   R0,0(0,R3)    Store short BFP RXE
0000000000000242  7050 3004                             0000000000000004    79          STE   R5,4(0,R3)    Store short BFP RRE
0000000000000246  4170 7004                             0000000000000004    80          LA    R7,4(0,R7)    Point to next short BFP input pair
000000000000024A  4130 3008                             0000000000000008    81          LA    R3,8(0,R3)    Point to next short BFP result pair
000000000000024E  062D                                                      82          BCTR  R2,R13        Loop through all short BFP test cases
0000000000000250  47F0 0254                             0000000000000254    83          B     TESTLONG      Go test long BFP division.
                                                                            84 *
                                                                            85 * BFP Division long RXE and RRE
                                                                            86 *
0000000000000254                                                            87 TESTLONG DS    0H
0000000000000254  4120 0005                             0000000000000005    88          LA    R2,5          Set count of division operations
0000000000000258  4130 0440                             0000000000000440    89          LA    R3,LONGRES    Point to start of long BFP quotients
000000000000025C  4170 0320                             0000000000000320    90          LA    R7,LONGBFP    Point to start of extended BFP input values
0000000000000260  0DD0                                                      91          BASR  R13,0         Set top of loop for long BFP tests
                                                                            92 *     Top of loop
                                                                            93 *     Collect dividend and divisor, do two divisions, store quotients
0000000000000262  6800 7000                             0000000000000000    94          LD    R0,0(0,R7)    Get BFP ext dividend
0000000000000266  2850                                                      95          LDR   R5,R0         Save dividend for RRE
0000000000000268  6840 7008                             0000000000000008    96          LD    R4,8(0,R7)    Get BFP ext divisor
000000000000026C  ED00 7008 001D                        0000000000000008    97          DDB   R0,8(0,R7)    Generate RXE long
0000000000000272  B31D 0054                                                 98          DDBR  R5,R4         Generate RRE long
0000000000000276  6000 3000                             0000000000000000    99          STD   R0,0(0,R3)    Store long BFP RXE quotient
000000000000027A  6050 3008                             0000000000000008   100          STD   R5,8(0,R3)    Store long BFP RRE quotient
000000000000027E  4170 7008                             0000000000000008   101          LA    R7,8(0,R7)    Point to next long BFP input pair
0000000000000282  4130 3010                             0000000000000010   102          LA    R3,16(0,R3)   Point to next long BFP result pair
0000000000000286  062D                                                     103          BCTR  R2,R13        Loop through all long test cases
0000000000000288  47F0 028C                             000000000000028C   104          B     TESTEXT       Skip across patch area
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           105 *
                                                                           106 * BFP division extended, RRE only.
                                                                           107 *
000000000000028C                                                           108 TESTEXT  DS    0H
000000000000028C  4120 0005                             0000000000000005   109          LA    R2,5          Set count of division operations
0000000000000290  4140 0500                             0000000000000500   110          LA    R4,EXTDRES    Point to start of extended BFP quotients
0000000000000294  4170 0360                             0000000000000360   111          LA    R7,EXTDBFP    Point to start of extended BFP input values
0000000000000298  0DD0                                                     112          BASR  R13,0         Set top of loop for l*l tests
                                                                           113 *     Top of loop
                                                                           114 *     Collect dividend & divisor, do division and Load FP Integer, store results.
000000000000029A  6800 7000                             0000000000000000   115          LD    R0,0(0,R7)    Get BFP ext dividend part 1
000000000000029E  6820 7008                             0000000000000008   116          LD    R2,8(0,R7)    Get BFP ext dividend part 2
00000000000002A2  68D0 7010                             0000000000000010   117          LD    R13,16(0,R7)  Get BFP ext divisor part 1
00000000000002A6  68F0 7018                             0000000000000018   118          LD    R15,24(0,R7)  Get BFP ext divisor part 2
00000000000002AA  B34D 000D                                                119          DXBR  R0,R13        Generate RRE extended quotient
00000000000002AE  6000 4000                             0000000000000000   120          STD   R0,0(0,R4)    Store extended BFP RRE quotient part 1
00000000000002B2  6020 4008                             0000000000000008   121          STD   R2,8(0,R4)    Store extended BFP RRE quotient part 2
00000000000002B6  4170 7010                             0000000000000010   122          LA    R7,16(0,R7)   Point to next extended BFP input pair
00000000000002BA  4140 4010                             0000000000000010   123          LA    R4,16(0,R4)   Point to next extended BFP result
00000000000002BE  062D                                                     124          BCTR  R2,R13        Loop through all test cases
                                                                           125 *
00000000000002C0  07FC                                                     126          BR    R12           Tests done, return to mainline
                                                                           127 *
                                                                           128 *
                                                                           129 *
00000000000002C4  00000000                                                 130 CTLR0    DS    F             Control register 0 (bit45 AFP control)
00000000000002C8  00020000 00000000                                        131 WAITPSW  DC    X'00020000000000000000000000000000' Disabled wait state PSW - normal completion
                                                                           132 *
00000000000002D8                      00000000000002D8  0000000000000300   133          ORG   BFPDIVNA+X'300'
0000000000000300                                                           134 SHORTBFP DS  0D    6 short BFP (Room for 8)
0000000000000300  40000000                                                 135          DC    X'40000000'        DC    2
0000000000000304  00000000                                                 136          DC    X'00000000'        DC    0
0000000000000308  7FC10000                                                 137          DC    X'7FC10000'     QNaN(1)
000000000000030C  7FC20000                                                 138          DC    X'7FC20000'     QNaN(2)
0000000000000310  7F830000                                                 139          DC    X'7F830000'     SNaN(3)
0000000000000314  7F840000                                                 140          DC    X'7F840000'     SNaN(4)
                                                                           141 *
0000000000000318                      0000000000000318  0000000000000320   142          ORG   BFPDIVNA+X'320'
0000000000000320                                                           143 LONGBFP  DS  0D    6 long BFP (Room for 8)
0000000000000320  40000000 00000000                                        144          DC    X'4000000000000000'     2
0000000000000328  00000000 00000000                                        145          DC    X'0000000000000000'     0
0000000000000330  7FF81000 00000000                                        146          DC    X'7FF8100000000000'     QNaN(1)
0000000000000338  7FF82000 00000000                                        147          DC    X'7FF8200000000000'     QNaN(2)
0000000000000340  7FF03000 00000000                                        148          DC    X'7FF0300000000000'     SNaN(3)
0000000000000348  7FF04000 00000000                                        149          DC    X'7FF0400000000000'     SNaN(4)
                                                                           150 *
0000000000000350                      0000000000000350  0000000000000360   151          ORG   BFPDIVNA+X'360'
0000000000000360                                                           152 EXTDBFP  DS  0D    6 Extended BFP (Room for 8, but not 9)
0000000000000360  40000000 00000000                                        153          DC    X'40000000000000000000000000000000'     2
0000000000000370  00000000 00000000                                        154          DC    X'00000000000000000000000000000000'     0
0000000000000380  7FFF8100 00000000                                        155          DC    X'7FFF8100000000000000000000000000'     QNaN(1)
0000000000000390  7FFF8200 00000000                                        156          DC    X'7FFF8200000000000000000000000000'     QNaN(2)
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000003A0  7FFF0300 00000000                                        157          DC    X'7FFF0300000000000000000000000000'     SNaN(3)
00000000000003B0  7FFF0400 00000000                                        158          DC    X'7FFF0400000000000000000000000000'     SNaN(4)
                                                                           159 *
00000000000003C0                      00000000000003C0  0000000000000400   160           ORG    BFPDIVNA+X'400'
0000000000000400  00000000 00000000                                        161 SHORTRES DS 8D    Results from short divide, five pairs, room for 8
0000000000000440  00000000 00000000                                        162 LONGRES  DS 16D   Results from long divide, five pairs, room for 8
00000000000004C0                      00000000000004C0  0000000000000500   163           ORG    BFPDIVNA+X'500'
0000000000000500  00000000 00000000                                        164 EXTDRES  DS 16D   Results from extended divide, five results, room for 8
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     5

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPDIVNA            J    000000    1408    25   43   45   47  133  142  151  160  163
CTLR0               F    0002C4       4   130   51   52   53
EXTDBFP             D    000360       8   152  111
EXTDRES             D    000500       8   164  110
IMAGE               1    000000    1408     0
LONGBFP             D    000320       8   143   90
LONGRES             D    000440       8   162   89
R0                  U    000000       1    26   51   53   70   73   74   76   78   94   95   97   99  115  119  120
R1                  U    000001       1    27
R10                 U    00000A       1    36
R11                 U    00000B       1    37
R12                 U    00000C       1    38   54  126
R13                 U    00000D       1    39   66   82   91  103  112  117  119  124
R14                 U    00000E       1    40
R15                 U    00000F       1    41  118
R2                  U    000002       1    28   63   82   88  103  109  116  121  124
R3                  U    000003       1    29   64   78   79   81   89   99  100  102
R4                  U    000004       1    30   71   75   77   96   98  110  120  121  123
R5                  U    000005       1    31   74   77   79   95   98  100
R6                  U    000006       1    32
R7                  U    000007       1    33   65   73   75   76   80   90   94   96   97  101  111  115  116  117  118  122
R8                  U    000008       1    34
R9                  U    000009       1    35
SHORTBFP            D    000300       8   134   65
SHORTRES            D    000400       8   161   64
STARTNAN            I    000200       4    51   44
TESTDIV             H    000214       2    62   54
TESTEXT             H    00028C       2   108  104
TESTLONG            H    000254       2    87   83
WAITPSW             X    0002C8      16   131   55
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     6

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     7

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     1408  000-57F  000-57F
  Region             1408  000-57F  000-57F
    CSECT  BFPDIVNA  1408  000-57F  000-57F
ASMA Ver. 0.2.0                                                                                     23 Jun 2016 09:49:49  Page     8

   STMT                              FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-div-nans.asm


** NO ERRORS FOUND **

